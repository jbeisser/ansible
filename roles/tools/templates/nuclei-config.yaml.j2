#nuclei config file
# generated by https://github.com/projectdiscovery/goflags

# target urls/hosts to scan
#target: []

# path to file containing a list of target urls/hosts to scan (one per line)
#list:

# list all available templates
#tl: false

# template or template directory paths to include in the scan
#templates: []

# list of workflows to run
#workflows: []

# run newly added templates only
#new-templates: false

# validate the passed templates to nuclei
#validate: false

# execute a subset of templates that contain the provided tags
#tags: []

# tags from the default deny list that permit executing more intrusive templates
#include-tags: []

# exclude templates with the provided tags
#exclude-tags: []

# templates to be executed even if they are excluded either by default or configuration
#include-templates: []

# template or template directory paths to exclude
#exclude: []

# templates to run based on severity. possible values: info, low, medium, high, critical
#impact:

# execute templates that are (co-)created by the specified authors
#author: []

# output file to write found issues/vulnerabilities
#output:

# display findings only
#silent: false

# show verbose output
#verbose: false

# display extra verbose information
#vv: false

# disable output content coloring (ansi escape codes)
#no-color: false

# write output in jsonl(ines) format
#json: false

# include request/response pairs in the jsonl output (for findings only)
#include-rr: false

# don't display match metadata
#no-meta: false

# don't display timestamp metadata in cli output
#no-timestamp: false

# local nuclei reporting database (always use this to persist report data)
#report-db:

# directory to export results in markdown format
#markdown-export:

# file to export results in sarif format
#sarif-export:

# path to the nuclei configuration file
#config:

# nuclei reporting module configuration file
#report-config:

# custom headers in header:value format
header:
{% if nuclei_headers %}
header:
{% for header in nuclei_headers %}
  - {{ header }}
{% endfor %}
{% else %}
# header: []
{% endif %}

# custom vars in var=value format
#var:

# file containing resolver list for nuclei
#resolvers:

# use system dns resolving as error fallback
#system-resolvers: false

# enable passive http response processing mode
#passive: false

# enable environment variables support
#env-vars: false

# disable interactsh server for oob testing
#no-interactsh: false

# interactsh server url for self-hosted instance
#interactsh-url: https://interact.sh

# authentication token for self-hosted interactsh server
#interactsh-token:

# number of requests to keep in the interactions cache
#interactions-cache-size: 5000

# number of seconds to wait before evicting requests from cache
#interactions-eviction: 60

# number of seconds to wait before each interaction poll request
#interactions-poll-duration: 5

# extra time for interaction polling before exiting
#interactions-cooldown-period: 5

# maximum number of requests to send per second
#rate-limit: 150

# maximum number of requests to send per minute
#rate-limit-minute: 0

# maximum number of hosts to be analyzed in parallel per template
#bulk-size: 25

# maximum number of templates to be executed in parallel
#concurrency: 10

# time to wait in seconds before timeout
#timeout: 5

# number of times to retry a failed request
#retries: 1

# max errors for a host before skipping from scan
#max-host-error: 30

# use a project folder to avoid sending same request multiple times
#project: false

# set a specific project path
#project-path: /var/folders/5f/zrt96brd39g2m2lpd66hh4840000gr/T/

# stop processing http requests after the first match (may break template/workflow logic)
#stop-at-first-path: false

# enable templates that require headless browser support
#headless: false

# seconds to wait for each page in headless mode
#page-timeout: 20

# show the browser on the screen when running templates with headless mode
#show-browser: false

# show all requests and responses
#debug: false

# show all sent requests
#debug-req: false

# show all received responses
#debug-resp: false

# url of the http proxy server
#proxy-url:

# url of the socks proxy server
#proxy-socks-url:

# file to write sent requests trace log
#trace-log:

# show nuclei version
#version: false

# shows the version of the installed nuclei-templates
#templates-version: false

# update nuclei to the latest released version
update: {{ update_nuclei }}

# update the community templates to latest released version
#update-templates: false
update-templates: {{ update_community_templates }}

# do not check for nuclei-templates updates
no-update-templates: {{ no_update_community_templates_check }}

# overwrite the default nuclei-templates directory
update-directory: {{ template_directory }}

# display statistics about the running scan
#stats: false

# write statistics data to an output file in jsonl(ines) format
#stats-json: false

# number of seconds to wait between showing a statistics update
#stats-interval: 5

# expose nuclei metrics on a port
#metrics: false

# port to expose nuclei metrics on
#metrics-port: 9092